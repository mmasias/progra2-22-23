@startuml
folder main {
    class Main {
        +Manager manager
        +UserDataBase userDataBase
        +main(): void
    }
    package Utils {
        package Interfaces {
            interface MenuItem {
                String getText()
                void execute()
            }
        }
        package Enums {
            enum Subjects {
                PROGRAMMING_II,
                MATHEMATICS_II,
                LOGIC,
                DISCRETE_MATHEMATICS,
                ICT
            }
        }
    }

    package Classes {
        package Menu {
            class Options {
                -final MenuItem quit
                -final MenuItem logout
                -final Manager manager
                -final Scanner scanner
                -final MenuItem[] studentOptions
                -final MenuItem[] teacherOptions
                -final MenuItem[] adminOptions
                +Options(Manager manager)
                -logout(): void
                -quit(): void
                -displayGrades(): void
                -studentSendEmail(): void
                -validateSubject: boolean
                -getSubjectTeacher: String
                -getStudentOptions(): MenuItem[]
                -getAdminOptions(): MenuItem[]
                -getTeacherOptions(): MenuItem[]
                +getSelectedUserOptions(): MenuItem[]
            }
            class MenuItemImpl implements main.Utils.Interfaces.MenuItem {
                -String text
                -Runnable action
                +MenuItemImpl(String text, Runnable action)
                +getText(): String
                +execute(): void
            }
        }
        package Users {
            abstract class User {
                #String username
                #String password;
                #boolean login
                +setUsername(String userName): void
                +setPassword(String password): void
                +setLogin(): void
                +getUsername(): String
                +getPassword(): String
                +isLogin(): boolean
            }
            class Student extends User {
                -String[] subjects
                -int[] grades
                +Student(String username, String password, int[] grades)
                +getGrades(): int[]
                +getSubjects(): String[]
            }
            class Teacher extends User {
                -String subject
                +Teacher(String userName, String password, String subject)
                +getSubject(): String
            }
            class Admin extends User {
                +Admin(String userName, String password)
            }
        }
        class Manager {
            -final boolean runSystem
            -User currentUser
            -final User[] users
            -final Scanner scanner
            -final Options options
            +Manager(User[] users)
            +login(): void
            +validateUserName(String userName): boolean
            +validatePassword(String password): boolean
            +getValidatedUser(String userName): User
            +displayOptions(): void
            +getOptions(): MenuItem[]
            +setRunSystem(): void
        }
        class UserDataBase {
            -final users
            +UserDataBase()
            +getUsers(): User[]
        }


    }
    Main --*  Manager : requires
    Main --*  UserDataBase : requires
    UserDataBase --*  User : requires
    Student --o main.Utils.Enums.Subjects : has
    Teacher --o main.Utils.Enums.Subjects : has
    Options *--  Manager : requires
    Options --*  main.Utils.Interfaces.MenuItem : requires



}

@enduml